name: Comment Automation
on:
  issue_comment:
    types: [created]

jobs:
  process-comment:
    runs-on: ubuntu-latest
    # Only process comments on open issues from non-bot users
    if: |
      github.event.issue.state == 'open' && 
      github.event.comment.user.type != 'Bot'
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          cd .devcontainer/github-workflow
          npm ci
          
      - name: Check for mentions
        id: check-mentions
        run: |
          # Check for @claude mentions
          if echo "${{ github.event.comment.body }}" | grep -qiE '@claude|@swarm|@ai'; then
            echo "has_ai_mention=true" >> $GITHUB_OUTPUT
          else
            echo "has_ai_mention=false" >> $GITHUB_OUTPUT
          fi
          
          # Check if issue has automation:ignore label
          if echo '${{ toJson(github.event.issue.labels) }}' | grep -q '"name":"automation:ignore"'; then
            echo "should_ignore=true" >> $GITHUB_OUTPUT
          else
            echo "should_ignore=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Apply processing labels
        if: steps.check-mentions.outputs.has_ai_mention == 'true' && steps.check-mentions.outputs.should_ignore == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_PAT }}
        run: |
          gh issue edit ${{ github.event.issue.number }} \
            --add-label "in-progress,swarm-active" \
            --repo ${{ github.repository }}
            
      - name: Process comment
        if: steps.check-mentions.outputs.should_ignore == 'false'
        id: process
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_PAT }}
          COMMENT_ID: ${{ github.event.comment.id }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_LABELS: ${{ toJson(github.event.issue.labels) }}
          HAS_AI_MENTION: ${{ steps.check-mentions.outputs.has_ai_mention }}
          COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
        run: |
          cd .devcontainer/github-workflow
          node actions/process-comment.js
          
      - name: Handle errors
        if: failure() && steps.check-mentions.outputs.should_ignore == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_PAT }}
        run: |
          # Post error reply with exponential backoff
          attempt=1
          max_attempts=3
          while [ $attempt -le $max_attempts ]; do
            if gh api \
              --method POST \
              /repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions \
              -f content='confused' > /dev/null 2>&1; then
              
              # Post error comment
              if gh issue comment ${{ github.event.issue.number }} \
                --body "❌ **Error Processing Comment**

I encountered an error while processing your comment. The system will retry with exponential backoff.

**Error Details:**
- Comment: ${{ github.event.comment.html_url }}
- Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
- Attempt: $attempt of $max_attempts

If this persists, please try again or contact an administrator." \
                --repo ${{ github.repository }}; then
                break
              fi
            fi
            
            # Exponential backoff: 2^attempt seconds
            sleep $((2**attempt))
            attempt=$((attempt + 1))
          done
          
          # Log critical failure if all retries failed
          if [ $attempt -gt $max_attempts ]; then
            echo "::error::Failed to process comment after $max_attempts attempts"
            
            # Create failure issue only for @mentions
            if [ "${{ steps.check-mentions.outputs.has_ai_mention }}" == "true" ]; then
              gh issue create \
                --title "🚨 Critical: Comment Processing Failure for #${{ github.event.issue.number }}" \
                --body "## Critical Failure Alert

The comment automation system failed to process a comment with @mention on issue #${{ github.event.issue.number }}.

### Failure Details
- **Issue**: #${{ github.event.issue.number }}
- **Comment**: ${{ github.event.comment.html_url }}
- **Author**: @${{ github.event.comment.user.login }}
- **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
- **Timestamp**: $(date -u +%Y-%m-%dT%H:%M:%SZ)

### Comment Preview
> ${{ github.event.comment.body }}

### Required Actions
1. Review the workflow logs
2. Manually respond to the comment
3. Check Bot-PAT permissions

@admin Please investigate this critical failure." \
                --label "critical,automation-failure" \
                --repo ${{ github.repository }}
            fi
          fi
          
      - name: Remove processing labels on completion
        if: success() && steps.check-mentions.outputs.has_ai_mention == 'true' && steps.check-mentions.outputs.should_ignore == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_PAT }}
        run: |
          gh issue edit ${{ github.event.issue.number }} \
            --remove-label "in-progress,swarm-active" \
            --repo ${{ github.repository }}